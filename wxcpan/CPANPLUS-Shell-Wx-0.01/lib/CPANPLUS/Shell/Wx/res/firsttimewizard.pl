#!/usr/bin/perl -w -- 
# generated by wxGlade 0.6.1 on Mon Jul 14 17:58:00 2008
# To get wxPerl visit http://wxPerl.sourceforge.net/

use Wx 0.15 qw[:allclasses];
use strict;

package MyFrame;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

use Wx::Locale gettext => '_T';
sub new {
	my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;

# begin wxGlade: MyFrame::new

	$style = wxDEFAULT_FRAME_STYLE 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
	$self->{text_ctrl_1} = Wx::TextCtrl->new($self, -1, _T("Welcome to the First Time Wizard. \n	\nSince This is the first time you have used wxCPAN, let's start by building a basic configuration file.\n	\nClick Next to begin."), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY|wxTE_CENTRE|wxTE_WORDWRAP);

	$self->__set_properties();
	$self->__do_layout();

# end wxGlade
	return $self;

}


sub __set_properties {
	my $self = shift;

# begin wxGlade: MyFrame::__set_properties

	$self->SetTitle(_T("frame_1"));
	$self->{text_ctrl_1}->Enable(0);

# end wxGlade
}

sub __do_layout {
	my $self = shift;

# begin wxGlade: MyFrame::__do_layout

	$self->{sizer_1} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{sizer_1}->Add($self->{text_ctrl_1}, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->SetSizer($self->{sizer_1});
	$self->{sizer_1}->Fit($self);
	$self->Layout();

# end wxGlade
}

# end of class MyFrame

1;

package MyFrame1;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

use Wx::Locale gettext => '_T';
sub new {
	my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;

# begin wxGlade: MyFrame1::new

	$style = wxDEFAULT_FRAME_STYLE 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
	$self->{text_ctrl_1_copy} = Wx::TextCtrl->new($self, -1, _T("Where would you like to save your CPANPLUS Configuration file?\n\nIf you want to configure CPANPLUS for this user only, select the 'CPANPLUS::Config::User' option. The file will then be saved in your home directory.\n\nIf you are the system administrator of this machine, and would like to make this config available globally, select the 'CPANPLUS::Config::System' option. The file will be then be saved in your CPANPLUS installation directory.\n"), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY|wxTE_CENTRE|wxTE_WORDWRAP);
	$self->{config_user} = Wx::RadioButton->new($self, -1, _T("CPANPLUS::Config::User"), wxDefaultPosition, wxDefaultSize, );
	$self->{config_system} = Wx::RadioButton->new($self, -1, _T("CPANPLUS::Config::System"), wxDefaultPosition, wxDefaultSize, );

	$self->__set_properties();
	$self->__do_layout();

# end wxGlade
	return $self;

}


sub __set_properties {
	my $self = shift;

# begin wxGlade: MyFrame1::__set_properties

	$self->SetTitle(_T("Update Which Modules?"));
	$self->{text_ctrl_1_copy}->Enable(0);
	$self->{config_user}->SetValue(1);

# end wxGlade
}

sub __do_layout {
	my $self = shift;

# begin wxGlade: MyFrame1::__do_layout

	$self->{sizer_2} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{sizer_2}->Add($self->{text_ctrl_1_copy}, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sizer_2}->Add($self->{config_user}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{sizer_2}->Add($self->{config_system}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->SetSizer($self->{sizer_2});
	$self->{sizer_2}->Fit($self);
	$self->Layout();

# end wxGlade
}

# end of class MyFrame1

1;

package MyFrame2;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

use Wx::Locale gettext => '_T';
sub new {
	my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;

# begin wxGlade: MyFrame2::new

	$style = wxDEFAULT_FRAME_STYLE 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
	$self->{text_ctrl_1_copy_copy} = Wx::TextCtrl->new($self, -1, _T("CPANPLUS can use command line utilities to do certain tasks, rather than use perl modules.\n\nIf you wish to use a certain command utility, just enter the full path (or accept the default). If you do not wish to use it, leave it blank. You can use the \"Select...\" button beside the field to browse the filesystem for the program.\n\nNote that the paths you provide should not contain spaces, which is needed to make a distinction between program name and options to that program. For Win32 machines, you can use the short name for a path, like 'c:\\Progra~1\\prog.exe'."), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY|wxTE_CENTRE|wxTE_WORDWRAP);
	$self->{label_1} = Wx::StaticText->new($self, -1, _T("Text Editor:"), wxDefaultPosition, wxDefaultSize, );
	$self->{text_ctrl_2} = Wx::TextCtrl->new($self, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{button_1} = Wx::Button->new($self, -1, _T("Select..."));
	$self->{label_1_copy} = Wx::StaticText->new($self, -1, _T("'make' utility:"), wxDefaultPosition, wxDefaultSize, );
	$self->{text_ctrl_2_copy} = Wx::TextCtrl->new($self, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{button_1_copy} = Wx::Button->new($self, -1, _T("Select..."));
	$self->{label_1_copy_1} = Wx::StaticText->new($self, -1, _T("File Viewer:"), wxDefaultPosition, wxDefaultSize, );
	$self->{text_ctrl_2_copy_1} = Wx::TextCtrl->new($self, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{button_1_copy_1} = Wx::Button->new($self, -1, _T("Select..."));
	$self->{label_1_copy_2} = Wx::StaticText->new($self, -1, _T("'perlwrapper' utility:"), wxDefaultPosition, wxDefaultSize, );
	$self->{text_ctrl_2_copy_2} = Wx::TextCtrl->new($self, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{button_1_copy_2} = Wx::Button->new($self, -1, _T("Select..."));
	$self->{label_1_copy_3} = Wx::StaticText->new($self, -1, _T("Command Shell:"), wxDefaultPosition, wxDefaultSize, );
	$self->{text_ctrl_2_copy_3} = Wx::TextCtrl->new($self, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{button_1_copy_3} = Wx::Button->new($self, -1, _T("Select..."));
	$self->{label_1_copy_4} = Wx::StaticText->new($self, -1, _T("'sudo' utility:"), wxDefaultPosition, wxDefaultSize, );
	$self->{text_ctrl_2_copy_4} = Wx::TextCtrl->new($self, -1, "", wxDefaultPosition, wxDefaultSize, );
	$self->{button_1_copy_4} = Wx::Button->new($self, -1, _T("Select..."));

	$self->__set_properties();
	$self->__do_layout();

# end wxGlade
	return $self;

}


sub __set_properties {
	my $self = shift;

# begin wxGlade: MyFrame2::__set_properties

	$self->SetTitle(_T("frame_3"));
	$self->{text_ctrl_1_copy_copy}->Enable(0);
	$self->{text_ctrl_2}->SetSize(Wx::Size->new(187, 27));
	$self->{text_ctrl_2_copy}->SetSize(Wx::Size->new(187, 27));
	$self->{text_ctrl_2_copy_1}->SetSize(Wx::Size->new(187, 27));
	$self->{text_ctrl_2_copy_2}->SetSize(Wx::Size->new(187, 27));
	$self->{text_ctrl_2_copy_3}->SetSize(Wx::Size->new(187, 27));
	$self->{text_ctrl_2_copy_4}->SetSize(Wx::Size->new(187, 27));

# end wxGlade
}

sub __do_layout {
	my $self = shift;

# begin wxGlade: MyFrame2::__do_layout

	$self->{sizer_3} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{grid_sizer_1} = Wx::FlexGridSizer->new(8, 3, 0, 0);
	$self->{sizer_3}->Add($self->{text_ctrl_1_copy_copy}, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{label_1}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{text_ctrl_2}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{button_1}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{label_1_copy}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{text_ctrl_2_copy}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{button_1_copy}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{label_1_copy_1}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{text_ctrl_2_copy_1}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{button_1_copy_1}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{label_1_copy_2}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{text_ctrl_2_copy_2}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{button_1_copy_2}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{label_1_copy_3}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{text_ctrl_2_copy_3}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{button_1_copy_3}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{label_1_copy_4}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{text_ctrl_2_copy_4}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{grid_sizer_1}->Add($self->{button_1_copy_4}, 0, wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->{sizer_3}->Add($self->{grid_sizer_1}, 1, wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxSHAPED, 0);
	$self->SetSizer($self->{sizer_3});
	$self->{sizer_3}->Fit($self);
	$self->Layout();

# end wxGlade
}

# end of class MyFrame2

1;

package MyFrame3;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

use Wx::Locale gettext => '_T';
sub new {
	my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;

# begin wxGlade: MyFrame3::new

	$style = wxDEFAULT_FRAME_STYLE 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
	$self->{text_ctrl_1_copy_copy_1} = Wx::TextCtrl->new($self, -1, _T("Please wait while we install the selected modules."), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY|wxTE_CENTRE|wxTE_WORDWRAP);
	$self->{gauge_1} = Wx::Gauge->new($self, -1, 1000, wxDefaultPosition,     wxDefaultSize, wxGA_HORIZONTAL|wxGA_SMOOTH);
	$self->{status_text} = Wx::StaticText->new($self, -1, _T("Status text..."), wxDefaultPosition, wxDefaultSize, );

	$self->__set_properties();
	$self->__do_layout();

# end wxGlade
	return $self;

}


sub __set_properties {
	my $self = shift;

# begin wxGlade: MyFrame3::__set_properties

	$self->SetTitle(_T("frame_4"));
	$self->{text_ctrl_1_copy_copy_1}->Enable(0);

# end wxGlade
}

sub __do_layout {
	my $self = shift;

# begin wxGlade: MyFrame3::__do_layout

	$self->{sizer_4} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{sizer_4}->Add($self->{text_ctrl_1_copy_copy_1}, 0, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sizer_4}->Add($self->{gauge_1}, 0, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->{sizer_4}->Add($self->{status_text}, 0, wxEXPAND|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL|wxADJUST_MINSIZE, 0);
	$self->SetSizer($self->{sizer_4});
	$self->{sizer_4}->Fit($self);
	$self->Layout();

# end wxGlade
}

# end of class MyFrame3

1;

package MyFrame4;

use Wx qw[:everything];
use base qw(Wx::Frame);
use strict;

use Wx::Locale gettext => '_T';
sub new {
	my( $self, $parent, $id, $title, $pos, $size, $style, $name ) = @_;
	$parent = undef              unless defined $parent;
	$id     = -1                 unless defined $id;
	$title  = ""                 unless defined $title;
	$pos    = wxDefaultPosition  unless defined $pos;
	$size   = wxDefaultSize      unless defined $size;
	$name   = ""                 unless defined $name;

# begin wxGlade: MyFrame4::new

	$style = wxDEFAULT_FRAME_STYLE 
		unless defined $style;

	$self = $self->SUPER::new( $parent, $id, $title, $pos, $size, $style, $name );
	$self->{problems} = Wx::TextCtrl->new($self, -1, _T("If there were any problems, they are listed below."), wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY|wxTE_CENTRE|wxTE_WORDWRAP);

	$self->__set_properties();
	$self->__do_layout();

# end wxGlade
	return $self;

}


sub __set_properties {
	my $self = shift;

# begin wxGlade: MyFrame4::__set_properties

	$self->SetTitle(_T("frame_5"));
	$self->{problems}->Enable(0);

# end wxGlade
}

sub __do_layout {
	my $self = shift;

# begin wxGlade: MyFrame4::__do_layout

	$self->{sizer_5} = Wx::BoxSizer->new(wxVERTICAL);
	$self->{sizer_5}->Add($self->{problems}, 1, wxEXPAND|wxADJUST_MINSIZE, 0);
	$self->SetSizer($self->{sizer_5});
	$self->{sizer_5}->Fit($self);
	$self->Layout();

# end wxGlade
}

# end of class MyFrame4

1;

1;

package main;

unless(caller){
	my $local = Wx::Locale->new("English", "en", "en"); # replace with ??
	$local->AddCatalog("app"); # replace with the appropriate catalog name

	local *Wx::App::OnInit = sub{1};
	my $app = Wx::App->new();
	Wx::InitAllImageHandlers();

	my $intro_panel = MyFrame->new();

	$app->SetTopWindow($intro_panel);
	$intro_panel->Show(1);
	$app->MainLoop();
}
